Создадим проект

- project
    -- Info.md
    -- human.md

И сделаем несколько коммитов по очереди

Запустим комманду git log --graph

> git log --graph

Неполный вывод

commit 78ea35724220902c4e1386089fb9901cc031dee9 (HEAD -> master)
| Author: Vladimir <shaitan.vladimir@gmail.com>
| Date:   Mon Nov 1 14:00:19 2021 +0200
|
|     updated human.md
|
* commit 4953fabee22b638361cf5383e3c8c188c7174b29
| Author: Vladimir <shaitan.vladimir@gmail.com>
| Date:   Mon Nov 1 13:59:28 2021 +0200
|
|     added human.md
|
* commit 82f0edc9c6c60625c20d8e7b9ca6755442678932
| Author: Vladimir <shaitan.vladimir@gmail.com>
| Date:   Mon Nov 1 13:59:09 2021 +0200
|
|     update Info.md


Обратите внимание на полоску слева. Она отражает связи между
коммитами. Каждый новый коммит базируется на коде предыдущего
коммита. Последний элемент при этом называется головой списка
(head по-английски).

В Git элементы списка — это сами коммиты. И так же, как в односвязном списке,
новый коммит (как элемент) имеет ссылку на старый (предыдущий),
а предыдущий — на свой предыдущий.

Понятие «голова списка» (HEAD) в git присутствует явно и активно используется
для разных операций. Например, удаление последнего коммита выглядит так:

# HEAD~1 означает: взять голову и удалить, начиная от нее, один коммит
# То есть только последний коммит
> git reset --hard HEAD~1

Вывод: HEAD is now at 4953fab added human.md

Сам список коммитов тоже имеет название master. В терминологии Git
такой список называется веткой (branch). Именно поэтому команда
для показа текущего местоположения в истории называется git branch:

> git branch

Вывод: * master